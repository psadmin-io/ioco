# example

import os
import logging
import json

def main(config):
    print("Generating example files")
    conf_json(config)
# example

import os
import logging
import json

def main(config):
    logging.debug("Generating example files")
    cloud_init(config)

def conf_json(config):
    try:
        example_path = config.get('--example-path') + "/conf.json"
        conf_out = config
        conf_out['example'] = None
        with open(example_path,'w') as f:
            f.write(json.dumps(conf_out, indent=4, sort_keys=True))
        print('Generated cloud-init script example at ' + example_path)
    except:
        print('ERROR: Could not generate cloud-init script example at ' + example_path)

def cloud_init(config): 
    conf_content = json.dumps(config, indent=10, sort_keys=True)
    # manually indent the brackets
    conf_content = str(conf_content).replace("{","      {").replace("}","      }")
    yaml_content = """      ---
      # defaults generated by ioco
      dpk_location:     /u01/app/oracle/product/dpk
      user_home_dir:    /home
      ps_config_home:   /u01/app/oracle/product/hostname/ps_cfg_home
"""

    template = """#cloud-config
#
# Example cloud-init script to be used in OCI instance user_data
# 
# - packages: Update with 'yum' packages you want installed
# - write_files: Update with files you want created. Edit the conf.json and psft_cust.yaml content as needed
# - runcmd: Update with commands you want executed

packages:
  - git

write_files:
# conf.json
  - content: |
{conf_content}                                 
    path: {conf_path}
# psft_customization.yaml
  - content: |
{yaml_content}                      
    path: {yaml_path}

runcmd:
# manual install python dependencies until published in pip
  - [ sh, -c, 'python3 -m pip install docopt requests' ]
  # clone git repo and checkout branch
  - [ sh, -c, 'git clone {ioco_git} {ioco_loc}' ]
  - [ sh, -c, 'git --git-dir {ioco_loc} checkout master' ]
  # setup block storage, mount dpk files repo, and deploy dpk
  - [ sh, -c, 'python3 {ioco_loc}/ioco oci block --make-file-system --mount' ]
  - [ sh, -c, 'python3 {ioco_loc}/ioco cm attach-dpk-files' ]
  - [ sh, -c, 'python3 {ioco_loc}/ioco dpk deploy' ]
"""
    context = {
        "conf_content": conf_content,
        "conf_path": config.get('--conf'),
        "yaml_content": yaml_content,
        "yaml_path": config.get('--cust-yaml'),
        "ioco_git": "https://test.mgmt.new.oraclevcn.com/root/iocloudops.git",
        "ioco_loc": "/tmp/ioCloudOps"
    }

    try:
        example_path = config.get('--example-path') + "/cloud-init.yaml"
        with open(example_path,'w') as f:
            f.write(template.format(**context))
        print('Generated cloud-init script example at ' + example_path)
    except:
        print('ERROR: Could not generate cloud-init script example at ' + example_path)
